# Generated by Django 4.1.4 on 2023-08-14 12:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('link', models.TextField(blank=True, db_column='Link', null=True)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'Attachments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('department', models.TextField(blank=True, null=True)),
                ('email_group', models.TextField(blank=True, null=True)),
                ('user_exchange', models.TextField(blank=True, null=True)),
                ('password_exchange', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Division',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField(blank=True, null=True)),
                ('sender_name', models.TextField(blank=True, null=True)),
                ('sender_email', models.TextField(blank=True, null=True)),
                ('copy', models.TextField(blank=True, null=True)),
                ('datetime_send', models.DateTimeField(blank=True, null=True)),
                ('yes_no_attach', models.BooleanField(blank=True, null=True)),
                ('text_body', models.TextField(blank=True, null=True)),
                ('recipients', models.TextField(blank=True, null=True)),
                ('control_period', models.DateTimeField(blank=True, null=True)),
                ('date_complited', models.DateTimeField(blank=True, null=True)),
                ('open_order', models.BooleanField(blank=True, null=True)),
                ('close_order', models.BooleanField(blank=True, null=True)),
                ('reply_email', models.BooleanField(blank=True, null=True)),
                ('html_body', models.TextField(blank=True, null=True)),
                ('date_accepted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'db_table': 'email',
                'ordering': ['-datetime_send'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('employee', models.TextField(blank=True, null=True)),
                ('email_staff', models.TextField(blank=True, db_column='email_Staff', null=True)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Персонал',
                'verbose_name_plural': 'Персонал',
                'db_table': 'Staff',
                'ordering': ['-id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, max_length='max', null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='appChat',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('chat_id', models.IntegerField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=50, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('datetime_send', models.DateTimeField(blank=True, null=True)),
                ('sender_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appchat',
                'ordering': ['datetime_send'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Thema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Prnt', 'Оргтехника'), ('Srv', 'Сервера'), ('Soft', 'Программное обеспечение'), ('Help', 'Помощь пользователям'), ('Vdo', 'Видеонаблюдение')], max_length=5, unique=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('orderid', models.AutoField(db_column='orderID', primary_key=True, serialize=False)),
                ('createddate', models.DateTimeField(auto_now_add=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('choice', models.ManyToManyField(to='applications.thema')),
                ('ordernumber', models.ForeignKey(db_column='orderNumber', on_delete=django.db.models.deletion.DO_NOTHING, to='applications.email')),
            ],
            options={
                'db_table': 'Category',
                'managed': True,
            },
        ),
    ]
